<UserControl
    x:Class="Algoloop.Wpf.Views.MarketsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:properties="clr-namespace:Algoloop.Wpf.Properties"
    xmlns:view="clr-namespace:Algoloop.Wpf.Views"
    xmlns:internal="clr-namespace:Algoloop.Wpf.Views.Internal"
    xmlns:model="clr-namespace:Algoloop.Wpf.Model;assembly=Algoloop.Wpf.Model"
    xmlns:vm="clr-namespace:Algoloop.Wpf.ViewModels"
    xmlns:wpf="clr-namespace:Capnode.Wpf.DataGrid;assembly=Capnode.Wpf"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding Source={StaticResource Locator}, Path=MarketsViewModel}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style x:Key="RightCell" TargetType="{x:Type TextBlock}">
            <Setter Property="TextAlignment" Value="Right" />
        </Style>

        <ObjectDataProvider x:Key="settings" ObjectInstance="{x:Static properties:Settings.Default}" />
    </UserControl.Resources>

    <UserControl.Cursor>
        <Binding Converter="{internal:BusyMouseConverter}" Path="IsBusy" />
    </UserControl.Cursor>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding Source={StaticResource settings}, Path=MarketViewSplitter, Mode=TwoWay, Converter={internal:Int32FromGridLengthConverter}}" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <GridSplitter
            Grid.Column="1"
            Width="5"
            Height="Auto"
            Margin="0"
            HorizontalAlignment="Left"
            VerticalAlignment="Stretch" />
        <DockPanel Grid.Column="0">
            <ToolBar DockPanel.Dock="Top" ToolBarTray.IsLocked="True">
                <Button Command="{Binding AddCommand}" ToolTip="Add market">
                    <Image
                        Width="16"
                        Height="16"
                        Source="/Resources/Add.png" />
                </Button>
                <Button Command="{Binding SelectedItem.DeleteCommand}" ToolTip="Delete">
                    <Image
                        Width="16"
                        Height="16"
                        Source="/Resources/Delete.png" />
                </Button>
                <Button Command="{Binding SelectedItem.StartCommand}" ToolTip="Start market">
                    <Image
                        Width="16"
                        Height="16"
                        Source="/Resources/Run.png" />
                </Button>
                <Button Command="{Binding SelectedItem.StopCommand}" ToolTip="Stop market">
                    <Image
                        Width="16"
                        Height="16"
                        Source="/Resources/Stop.png" />
                </Button>
            </ToolBar>
            <TreeView
                BorderThickness="0"
                AllowDrop="False"
                DragOver="TreeView_DragOver"
                Drop="TreeView_Drop"
                PreviewMouseLeftButtonDown="TreeView_PreviewMouseLeftButtonDown"
                MouseLeftButtonUp="TreeView_MouseLeftButtonUp"
                SelectedItemChanged="TreeView_SelectedItemChanged"
                MouseMove="TreeView_MouseMove"
                ItemsSource="{Binding Markets}">
                <TreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding AddCommand}" Header="Add Market">
                            <MenuItem.Icon>
                                <Image
                                    Width="16"
                                    Height="16"
                                    Source="/Resources/Add.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </TreeView.ContextMenu>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type vm:MarketViewModel}" ItemsSource="{Binding Lists}">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsTabStop="False" Command="{Binding ActiveCommand}" IsChecked="{Binding Active}"/>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{} {0} ({1})">
                                        <Binding Path="Model.Name" />
                                        <Binding Path="Lists.Count" />
                                    </MultiBinding>
                                </TextBlock.Text>
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding DeleteCommand}" Header="Delete market">
                                            <MenuItem.Icon>
                                                <Image
                                                    Width="16"
                                                    Height="16"
                                                    Source="/Resources/Delete.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="{Binding NewListCommand}" Header="New list">
                                            <MenuItem.Icon>
                                                <Image
                                                    Width="16"
                                                    Height="16"
                                                    Source="/Resources/Add.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="{Binding ImportListCommand}" Header="Import list...">
                                            <MenuItem.Icon>
                                                <Image
                                                    Width="16"
                                                    Height="16"
                                                    Source="/Resources/Import.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type vm:ListViewModel}" ItemsSource="{Binding Symbols}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{} {0} ({1})">
                                        <Binding Path="Model.Name" />
                                        <Binding Path="Symbols.Count" />
                                    </MultiBinding>
                                </TextBlock.Text>
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding DeleteCommand}" Header="Delete list">
                                            <MenuItem.Icon>
                                                <Image
                                                    Width="16"
                                                    Height="16"
                                                    Source="/Resources/Delete.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="{Binding ExportListCommand}" Header="Export list...">
                                            <MenuItem.Icon>
                                                <Image
                                                    Width="16"
                                                    Height="16"
                                                    Source="/Resources/Export.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type vm:SymbolViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Model.Name}" />
                        </StackPanel>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
        </DockPanel>
        <ContentControl
            Grid.Column="1"
            Margin="7,0,0,0"
            Content="{Binding Path=SelectedItem}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type vm:MarketViewModel}">
                    <TabControl>
                        <TabItem Header="{Binding Symbols.Count, Converter={internal:StringFormatConverter}, ConverterParameter=Instruments ({0}), FallbackValue=Instruments}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        MinWidth="120"
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Accounts}"
                                        SelectedValue="{Binding SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account"
                                        Visibility="{Binding Accounts.Count, Converter={internal:BooleanToVisibilityConverter}}" />
                                    <Grid>
                                        <CheckBox
                                            VerticalAlignment="Center"
                                            Command="{Binding CheckAllCommand}"
                                            CommandParameter="{Binding ElementName=marketSymbolDataGrid, Path=SelectedItems}"
                                            IsChecked="{Binding CheckAll}"
                                            ToolTip="Check all selected" />
                                    </Grid>
                                    <Button Command="{Binding AddSymbolCommand}" ToolTip="Add symbol">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            Source="/Resources\Add.png" />
                                    </Button>
                                    <Button
                                        Command="{Binding RemoveSymbolsCommand}"
                                        CommandParameter="{Binding ElementName=marketSymbolDataGrid, Path=SelectedItems}"
                                        ToolTip="Delete symbols">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            Source="/Resources\Delete.png" />
                                    </Button>
                                    <Button
                                        Command="{Binding ImportSymbolsCommand}"
                                        ToolTip="Import symbols ...">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            Source="/Resources\Import.png" />
                                    </Button>
                                    <Button
                                        Command="{Binding ExportSymbolsCommand}"
                                        CommandParameter="{Binding ElementName=marketSymbolDataGrid, Path=SelectedItems}"
                                        ToolTip="Export symbols ...">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            Source="/Resources\Export.png" />
                                    </Button>
                                    <Button
                                        Command="{Binding AddToSymbolListCommand}"
                                        CommandParameter="{Binding ElementName=marketSymbolDataGrid, Path=SelectedItems}"
                                        ToolTip="Add to new symbol list">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            Source="/Resources\AddList.png" />
                                    </Button>
                                </ToolBar>
                                <wpf:ExDataGrid
                                    x:Name="marketSymbolDataGrid"
                                    AutoGenerateColumns="False"
                                    CanUserFilter="True"
                                    CanUserFreeze="False"
                                    CanUserGroup="False"
                                    CanUserReorderColumns="True"
                                    CanUserSelectDistinct="True"
                                    ExColumns="{Binding SymbolColumns}"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=MarketSymbolsColumnsInfo}"
                                    ExItemsSource="{Binding Symbols}"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    FrozenColumnCount="1"
                                    GridLinesVisibility="None"
                                    SelectedValue="{Binding SelectedSymbol, Mode=TwoWay}">
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="{Binding Balances.Count, Converter={internal:StringFormatConverter}, ConverterParameter=Balance ({0}), FallbackValue=Balance}" Visibility="{Binding Accounts.Count, Converter={internal:BooleanToVisibilityConverter}}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        MinWidth="120"
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Accounts}"
                                        SelectedValue="{Binding SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account" />
                                </ToolBar>
                                <wpf:ExDataGrid
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    AutoGenerateColumns="False"
                                    CanUserFilter="True"
                                    CanUserFreeze="False"
                                    CanUserGroup="False"
                                    CanUserReorderColumns="True"
                                    CanUserSelectDistinct="True"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=AccountBalanceColumnsInfo}"
                                    ExItemsSource="{Binding Balances}"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    FrozenColumnCount="1"
                                    GridLinesVisibility="None"
                                    IsReadOnly="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding Equity, NotifyOnTargetUpdated=True}" Header="Equity"/>
                                        <DataGridTextColumn Binding="{Binding Cash, NotifyOnTargetUpdated=True}" Header="Cash" />
                                        <DataGridTextColumn Binding="{Binding Profit, NotifyOnTargetUpdated=True}" Header="Profit" />
                                        <DataGridTextColumn Binding="{Binding DayProfit, NotifyOnTargetUpdated=True}" Header="Profit today" />
                                        <DataGridTextColumn Binding="{Binding Currency, NotifyOnTargetUpdated=True}" Header="Currency" />
                                    </DataGrid.Columns>
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="{Binding Orders.Count, Converter={internal:StringFormatConverter}, ConverterParameter=Orders ({0}), FallbackValue=Orders}" Visibility="{Binding Accounts.Count, Converter={internal:BooleanToVisibilityConverter}}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        MinWidth="120"
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Accounts}"
                                        SelectedValue="{Binding SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account" />
                                </ToolBar>
                                <wpf:ExDataGrid
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    AutoGenerateColumns="False"
                                    CanUserFilter="True"
                                    CanUserFreeze="False"
                                    CanUserGroup="False"
                                    CanUserReorderColumns="True"
                                    CanUserSelectDistinct="True"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=AccountOrdersColumnsInfo}"
                                    ExItemsSource="{Binding Orders}"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    FrozenColumnCount="1"
                                    GridLinesVisibility="None"
                                    IsReadOnly="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding Id, NotifyOnTargetUpdated=True}" Header="Id" />
                                        <DataGridTextColumn Binding="{Binding Symbol, NotifyOnTargetUpdated=True}" Header="Symbol" />
                                        <DataGridTextColumn Binding="{Binding Price, NotifyOnTargetUpdated=True}" Header="Price" />
                                        <DataGridTextColumn Binding="{Binding PriceCurrency, NotifyOnTargetUpdated=True}" Header="PriceCurrency" />
                                        <DataGridTextColumn Binding="{Binding Time, NotifyOnTargetUpdated=True}" Header="Time" />
                                        <DataGridTextColumn Binding="{Binding Quantity, NotifyOnTargetUpdated=True}" Header="Quantity" />
                                        <DataGridTextColumn Binding="{Binding Type, NotifyOnTargetUpdated=True}" Header="Type" />
                                        <DataGridTextColumn Binding="{Binding Status, NotifyOnTargetUpdated=True}" Header="Status" />
                                        <DataGridTextColumn Binding="{Binding SecurityType, NotifyOnTargetUpdated=True}" Header="SecurityType" />
                                        <DataGridTextColumn Binding="{Binding Direction, NotifyOnTargetUpdated=True}" Header="Direction" />
                                        <DataGridTextColumn Binding="{Binding OrderValue, NotifyOnTargetUpdated=True}" Header="Value" />
                                    </DataGrid.Columns>
                                    <DataGrid.Resources>
                                        <ContextMenu x:Key="RowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Command="{Binding CloseOrderCommand}" Header="Close order">
                                                <MenuItem.Icon>
                                                    <Image
                                                        Width="16"
                                                        Height="16"
                                                        Source="/Resources/Delete.png" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </DataGrid.Resources>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow">
                                            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                                        </Style>
                                    </DataGrid.RowStyle>
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="{Binding Positions.Count, Converter={internal:StringFormatConverter}, ConverterParameter=Positions ({0}), FallbackValue=Positions}" Visibility="{Binding Accounts.Count, Converter={internal:BooleanToVisibilityConverter}}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        MinWidth="120"
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Accounts}"
                                        SelectedValue="{Binding SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account" />
                                </ToolBar>
                                <wpf:ExDataGrid
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    AutoGenerateColumns="False"
                                    CanUserFilter="True"
                                    CanUserFreeze="False"
                                    CanUserGroup="False"
                                    CanUserReorderColumns="True"
                                    CanUserSelectDistinct="True"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=AccountPositionsColumnsInfo}"
                                    ExItemsSource="{Binding Positions}"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    FrozenColumnCount="1"
                                    GridLinesVisibility="None"
                                    IsReadOnly="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding Symbol, NotifyOnTargetUpdated=True}" Header="Symbol" />
                                        <DataGridTextColumn Binding="{Binding SecurityType, NotifyOnTargetUpdated=True}" Header="SecurityType" />
                                        <DataGridTextColumn Binding="{Binding CurrencySymbol, NotifyOnTargetUpdated=True}" Header="Currency" />
                                        <DataGridTextColumn Binding="{Binding AveragePrice, NotifyOnTargetUpdated=True}" Header="AveragePrice" />
                                        <DataGridTextColumn Binding="{Binding Quantity, NotifyOnTargetUpdated=True}" Header="Quantity" />
                                        <DataGridTextColumn Binding="{Binding MarketPrice, NotifyOnTargetUpdated=True}" Header="MarketPrice" />
                                        <DataGridTextColumn Binding="{Binding ConversionRate, NotifyOnTargetUpdated=True}" Header="ConversionRate" />
                                        <DataGridTextColumn Binding="{Binding MarketValue, NotifyOnTargetUpdated=True}" Header="MarketValue" />
                                        <DataGridTextColumn Binding="{Binding UnrealizedPnL, NotifyOnTargetUpdated=True}" Header="UnrealizedPnL" />
                                    </DataGrid.Columns>
                                    <DataGrid.Resources>
                                        <ContextMenu x:Key="RowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Command="{Binding ClosePositionCommand}" Header="Close position">
                                                <MenuItem.Icon>
                                                    <Image
                                                        Width="16"
                                                        Height="16"
                                                        Source="/Resources/Delete.png" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </DataGrid.Resources>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow">
                                            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
                                        </Style>
                                    </DataGrid.RowStyle>
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="{Binding ClosedTrades.Count, Converter={internal:StringFormatConverter}, ConverterParameter=Trades ({0}), FallbackValue=Trades}" Visibility="{Binding Accounts.Count, Converter={internal:BooleanToVisibilityConverter}}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        MinWidth="120"
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Accounts}"
                                        SelectedValue="{Binding SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account" />
                                </ToolBar>
                                <wpf:ExDataGrid
                                    AutoGenerateColumns="False"
                                    CanUserFilter="True"
                                    CanUserFreeze="False"
                                    CanUserGroup="False"
                                    CanUserReorderColumns="True"
                                    CanUserSelectDistinct="True"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=AccountClosedTradesColumnsInfo}"
                                    ExItemsSource="{Binding ClosedTrades}"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    FrozenColumnCount="1"
                                    GridLinesVisibility="None"
                                    IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding EntryTime, StringFormat=G}" Header="Entry time" />
                                        <DataGridTextColumn Binding="{Binding ExitTime, StringFormat=G}" Header="Exit time" />
                                        <DataGridTextColumn Binding="{Binding Direction}" Header="Direction" />
                                        <DataGridTextColumn Binding="{Binding Symbol.Value}" Header="Symbol" />
                                        <DataGridTextColumn Binding="{Binding Symbol.SecurityType}" Header="Type" />
                                        <DataGridTextColumn
                                            Binding="{Binding EntryPrice}"
                                            ElementStyle="{StaticResource RightCell}"
                                            Header="Entry price" />
                                        <DataGridTextColumn
                                            Binding="{Binding ExitPrice}"
                                            ElementStyle="{StaticResource RightCell}"
                                            Header="Exit price" />
                                        <DataGridTextColumn
                                            Binding="{Binding Quantity}"
                                            ElementStyle="{StaticResource RightCell}"
                                            Header="Quantity" />
                                        <DataGridTextColumn
                                            Binding="{Binding ProfitLoss}"
                                            ElementStyle="{StaticResource RightCell}"
                                            Header="Profit" />
                                        <DataGridTextColumn
                                            Binding="{Binding TotalFees}"
                                            ElementStyle="{StaticResource RightCell}"
                                            Header="Fees" />
                                        <DataGridTextColumn
                                            Binding="{Binding Duration, StringFormat='{}{0:d\\.hh\\:mm\\:ss}'}"
                                            ElementStyle="{StaticResource RightCell}"
                                            Header="Duration" />
                                    </DataGrid.Columns>
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Settings">
                            <xctk:PropertyGrid
                                SelectedObject="{Binding Model}"
                                ShowAdvancedOptions="False"
                                ShowSearchBox="False"
                                ShowSortOptions="False"
                                ShowSummary="True"
                                ShowTitle="False" />
                        </TabItem>
                    </TabControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:ListViewModel}">
                    <TabControl>
                        <TabItem Header="{Binding Symbols.Count, Converter={internal:StringFormatConverter}, ConverterParameter=Symbols ({0}), FallbackValue=Symbols}">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        MinWidth="120"
                                        DisplayMemberPath="Name"
                                        ItemsSource="{Binding Market.Accounts}"
                                        SelectedValue="{Binding Market.SelectedAccount, Mode=TwoWay}"
                                        ToolTip="Selected account"
                                        Visibility="{Binding Market.Accounts.Count, Converter={internal:BooleanToVisibilityConverter}}" />
                                    <ComboBox
                                        Name="combobox"
                                        MinWidth="120"
                                        DisplayMemberPath="Model.Name" />
                                    <Button
                                        Command="{Binding AddSymbolCommand}"
                                        CommandParameter="{Binding ElementName=combobox, Path=SelectedValue}"
                                        ToolTip="Add symbol">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            Source="/Resources\Add.png" />
                                    </Button>
                                    <Button
                                        Command="{Binding RemoveSymbolsCommand}"
                                        CommandParameter="{Binding ElementName=marketListDataGrid, Path=SelectedItems}"
                                        ToolTip="Remove symbols">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            Source="/Resources\Delete.png" />
                                    </Button>
                                </ToolBar>
                                <wpf:ExDataGrid
                                    TargetUpdated="TargetUpdatedBlinkCell"
                                    x:Name="marketListDataGrid"
                                    AutoGenerateColumns="False"
                                    CanUserFilter="False"
                                    CanUserFreeze="False"
                                    CanUserGroup="False"
                                    CanUserReorderColumns="True"
                                    CanUserSelectDistinct="True"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=MarketSymbolListsColumnsInfo}"
                                    ExItemsSource="{Binding Symbols}"
                                    ExSelectedItems="{Binding SelectedItems}"
                                    FrozenColumnCount="1"
                                    GridLinesVisibility="None"
                                    SelectedValue="{Binding SelectedSymbol, Mode=TwoWay}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding Model.Name}" Header="Name" />
                                        <DataGridTextColumn Binding="{Binding Ask, NotifyOnTargetUpdated=True}" Header="Ask"/>
                                        <DataGridTextColumn Binding="{Binding Bid, NotifyOnTargetUpdated=True}" Header="Bid"/>
                                    </DataGrid.Columns>
                                </wpf:ExDataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Settings">
                            <xctk:PropertyGrid
                                SelectedObject="{Binding Model}"
                                ShowAdvancedOptions="False"
                                ShowSearchBox="False"
                                ShowSortOptions="False"
                                ShowSummary="True"
                                ShowTitle="False" />
                        </TabItem>
                    </TabControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:SymbolViewModel}">
                    <TabControl>
                        <TabItem Header="Chart">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <Label
                                        MinWidth="60"
                                        Margin="10,0,10,0"
                                        Content="{Binding Model.Name}"
                                        FontSize="20" />
                                    <ComboBox
                                        MinWidth="120"
                                        ItemsSource="{Binding Market.ResolutionList}"
                                        SelectedValue="{Binding Market.ChartResolution, Mode=TwoWay}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding UpdateCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>
                                    <xctk:DateTimePicker
                                        Margin="6"
                                        AutoCloseCalendar="True"
                                        BorderThickness="0"
                                        Format="ShortDate"
                                        TimePickerVisibility="Collapsed"
                                        Value="{Binding Market.ChartDate}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="ValueChanged">
                                                <i:InvokeCommandAction Command="{Binding UpdateCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </xctk:DateTimePicker>
                                    <Separator/>
                                    <ComboBox
                                        MinWidth="100"
                                        ToolTip="Operation on reference symbol"
                                        SelectedItem="{Binding SelectedReferenceSymbol.Model.Operation}"
                                        ItemsSource="{Binding Source={internal:EnumBindingSource {x:Type model:Operator}}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding UpdateCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>
                                    <Separator Width="8" Visibility="Hidden"/>
                                    <ComboBox
                                        MinWidth="180"
                                        DisplayMemberPath="DisplayName"
                                        ToolTip="Reference symbols: Drag symbol from list to add symbol"
                                        AllowDrop="True"
                                        Drop="Reference_Drop"
                                        SelectedItem="{Binding SelectedReferenceSymbol}"
                                        ItemsSource="{Binding ReferenceSymbols}">
                                    </ComboBox>
                                    <Button Command="{Binding SelectedItem.DeleteCommand}" ToolTip="Delete reference symbol">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            Source="/Resources/Delete.png" />
                                    </Button>
                                </ToolBar>
                                <view:StockChartView
                                    ItemsSource="{Binding Charts}"
                                    Settings="{Binding Source={StaticResource settings}, Path=MarketViewChartSettings}"/>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Fundamentals">
                            <DockPanel>
                                <ToolBar DockPanel.Dock="Top">
                                    <ComboBox
                                        MinWidth="120"
                                        ItemsSource="{Binding Market.ReportPeriodList}"
                                        SelectedValue="{Binding Market.SelectedReportPeriod, Mode=TwoWay}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding UpdateCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>
                                </ToolBar>
                                <wpf:ExDataGrid
                                    AutoGenerateColumns="False"
                                    CanUserFilter="False"
                                    CanUserFreeze="False"
                                    CanUserGroup="False"
                                    CanUserReorderColumns="False"
                                    CanUserSelectDistinct="False"
                                    ExColumnsInfo="{Binding Source={StaticResource settings}, Path=FundamentalsColumnsInfo}"
                                    ExColumns="{Binding PeriodColumns}"
                                    ExItemsSource="{Binding FundamentalRows}"
                                    FrozenColumnCount="1"
                                    GridLinesVisibility="None" />
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
    </Grid>
</UserControl>
